s =("GGCAGTACGGAGTGTACTTCGTCTGTCATTTACCGTCTATACCCTCTTCTCTGGCAACGTATCCCTGTTTTATACTATGCTTAGACCTGCCAGGAGACCATCTGCCCGTTCCTATCTAATGGGTCCGACTACGACAAGCGTATTTGGGAAAGGACCAGTATCGAAAACATCTCCCTAGTTTCCTGGATACTTTCTAAACAGCGTTTATTGGGGATAACTACCCCGAACTTGTCAGTCGGGATTACGGAACCTGACTGAGTTCTTGCATGTCGAGATTCAAGAAAGCGTACCCACTCAAACAGCCCGCTATAAGCTGCGCGACCGGGAGCGTAACCATCTCCGGGCGCGTGGCACGTCCTTACACGTAGGCAGGTTTCGTTTCTAGGCAAGCGAGAAATACGATAGAGTATAATTGTAGCGTCAACCAAACCGTCTGCAAGCCTCATCGAAGAAAAGCCGCTCCGGACTGTACTATAGACAACGAGCCGACCGCAGGGACTTCTCGAAATATTGGACAAGCACTGTACCATTGAACAGAACCGTCCATACAATTTTCATGTTTGGCGCCGATTGTAGAGCCTAACGTGGGCCGGACTCGAGGTTCCCACAAGTTTCTAAACCTAGGCTCCGCGAACGAGTTAACTTAACAGGCAGTTGTTTCATTCGAGGATATCGATTAACACCCTCTGTGTGTTGAGGTCAATTCTTGAGGTACTTTACAAATAGTTGCTCGAACGCCTTAAACACAAGCCAGTTGAGACTTCGGGACTTATTGCAGCCAGCCGTGCGGCATCGGCCACAAACCCGCATCTCCGGCTGCCTTTAATATATCCCGGTGCCTATGCCAATTTGATGATCCAGCATAGAAACTCGTGTTCATCACTCTGATATAGTCGCACGCGGAGAAGGGCACAAACAAGAACGAACTTCTTTGATGTCTCAATCTACGAGAGTATTAACACGGTACCATATACTGATGAAATGCCTCTATG")
t=("TGGGGCACTTAATGGATACCGTTAGACTTCAATCTGCGATGCCTTACTATGGGGGCGGTTATAAAAGAGCTTTGCTCGCCGTCGTCTCTGCGCTAGTGTGCGTGCCCAGTCCCCCCTGATAGGATCGACCACGAATGTCCCTTGTCAGTTATGGGCAGTACTACACAATTTTCCCTCGAGTACACGATATGTTCTGGACTGAATCATTTCACCGGCATCATCCCGGGCTTGACTCGCGGGATCTCGCAACATGAGTGCGTGATTAAATTGGCTGCTACAGGCCATGGTACACAGCACTAACCCCCAAGAAAATCGGCTTGAGGAGGAAAGTGGGGGTCTATGGGCCTTTAAAAGTGCGCTTCATGCACCCCGGCATCGGTACAAAGGCGTAGAATACAACAGTAGTGTTCAATAGTAGAGTTTATCTAACGCATCGATAGCCAAATCGTCGTAAAGGCGCTCCAGTACGGCATTTAAACCACGAGTCATCCTCACGGTGTTCTTATCTTATTCGCCTAACATCCGAAGGTGGAACGGCATCTATCAAACTGTTTTCCGGCTGGGTGTCTATTTATCAGGCGGGCGTGGCCCTAAGTCGGAGGGCCTAGAAGTTCCTACCGATAGGAGCGCCGAACGACTGTAGGTAGGCGGTGGTTGGCTCCGTCTATGATATCGCTTAATCAACGATCTGTGTTCAGCAGTAACCTAAAGGTACTTCACCTAGCACCACTCGTACGCTTAGAATGCAAGGAAATAAAGACCAAATCATTTACAGAGACAATCCATCCTCGCGGCGCGGCAACGCCAAAGCTTCTAATTAATGGAACTGAAGCGCCGGCCTCGCCGTATCACATGCGCCTGTATAGCTAACGAGGTGACGCAGTCAGATAAGGTTCGCCCCGGCGGAGAGCGGATATAATAGCGTCCATCGTCGATCCTTCAGTCTCCGAGTCAATTTAGACATTGCGATGAACTCACCCAATTTATCCTTT")

def hamming_distance(s, t):
    return sum([0 if x == y else 1 for x , y in zip(s,t)])

print(hamming_distance(s,t))